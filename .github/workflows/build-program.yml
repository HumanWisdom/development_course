name: build-program-staging
on:
  push:
    branches: [main, prod-setup-demo]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup nodejs
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: program/node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
        
    - name: Install global dependencies
      run: |
        npm install -g @ionic/cli
        npm install -g @angular/cli

    - name: Install project dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: |
        cd program
        npm ci

    - name: Build the project
      run: |
        cd program
        export NODE_OPTIONS=--max_old_space_size=8096
        ionic build -- -c=staging --base-href /course/
    
    - name: Compress the build artifacts
      run: |
        cd program
        mkdir -p builds/compressed
        tar -czf builds/compressed/program.tgz www/

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: program-artifact
        path: program/builds/compressed/program.tgz
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: program-artifact

    - name: 'Run on prod demo branch'
      if: ${{ github.ref == 'refs/heads/prod-setup-demo' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        run: |
          mkdir -p myNewFolder/myNewSubFolder && cp -R dist myNewFolder/myNewSubFolder
          ls myNewFolder/MyNewSubFolder   
          
