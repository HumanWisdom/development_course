{"version":3,"file":"ngx-circular-player.js","sources":["ngx-circular-player/lib/ngx-circular-player.component.ts","ngx-circular-player/lib/ngx-circular-player.module.ts","ngx-circular-player/public-api.ts","ngx-circular-player/ngx-circular-player.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nconst RADIUS = 50;\n\n@Component({\n  // tslint:disable component-selector\n  selector: 'ngx-circular-player',\n  templateUrl: './ngx-circular-player.component.html',\n  styleUrls: ['./ngx-circular-player.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxCircularPlayerComponent implements AfterViewInit {\n  @Input() radius = 120;\n  @Input() stroke = 20;\n  @Input() innerStroke = 2;\n  @Input() source: string;\n  @Input() strokeColor = '#fff';\n  @Input() progressStrokeColor = '#858585';\n  @Input() innerStrokeColor = '#eee';\n\n  @ViewChild('audio') audio: ElementRef;\n  @ViewChild('progress') progress: ElementRef;\n\n  playing = false;\n\n  toggle() {\n    this.playing = !this.playing;\n    if (this.playing) {\n      this.audio.nativeElement.play();\n    } else {\n      this.audio.nativeElement.pause();\n    }\n  }\n\n  get arrowStyle() {\n    const topWidth = this.radius / 8;\n    const bottomWidth = this.radius / 8;\n    const leftWidth = this.radius / 5;\n    return {\n      'border-top-width': `${topWidth}px`,\n      'border-bottom-width': `${bottomWidth}px`,\n      'border-left-width': `${leftWidth}px`\n    };\n  }\n\n  ngAfterViewInit() {\n    const progress = this.progress.nativeElement;\n    // During SSR we don't need to do anything special here.\n    if (!progress || typeof progress.getTotalLength !== 'function') {\n      return;\n    }\n    const totalLength = progress.getTotalLength();\n    const audio = this.audio.nativeElement as HTMLAudioElement;\n    progress.setAttribute('stroke-dasharray', totalLength);\n    progress.setAttribute('stroke-dashoffset', totalLength);\n    audio.addEventListener('pause', () => (this.playing = false));\n    audio.addEventListener('play', () => (this.playing = true));\n    audio.addEventListener('timeupdate', () => {\n      const currentTime = audio.currentTime;\n      const maxduration = audio.duration;\n      const calc = totalLength - (currentTime / maxduration) * totalLength;\n\n      progress.setAttribute('stroke-dashoffset', calc);\n    });\n  }\n\n  seek(evnt: MouseEvent) {\n    const ratio = this._calculateAngle(evnt) / 360;\n    const audio = this.audio.nativeElement as HTMLAudioElement;\n    const seekTo = ratio * audio.duration;\n    audio.currentTime = seekTo;\n  }\n\n  get centerX() {\n    return 50;\n  }\n\n  get centerY() {\n    return 50;\n  }\n\n  get circleRadius() {\n    return 32;\n  }\n\n  get pauseLeftBarSize() {\n    return {\n      width: `${this.radius / 10}px`,\n      height: `${this.radius / 3.5}px`,\n      left: `calc(50% - ${this.radius / 12}px)`\n    };\n  }\n\n  get pauseRightBarSize() {\n    return {\n      width: `${this.radius / 10}px`,\n      height: `${this.radius / 3.5}px`,\n      left: `calc(50% + ${this.radius / 12}px)`\n    };\n  }\n\n  get playButtonRadius() {\n    return this.radius - this.radius / 3 + 'px';\n  }\n\n  private _calculateAngle(evnt: MouseEvent) {\n    const x = (RADIUS * 2) / (this.radius / evnt.offsetX);\n    const y = (RADIUS * 2) / (this.radius / evnt.offsetY);\n    const slope = (RADIUS - y) / (RADIUS - x);\n    const angle = 180 * (Math.abs(Math.atan(slope)) / Math.PI);\n\n    if (x <= RADIUS && y >= RADIUS) {\n      return angle;\n    }\n    if (x > RADIUS && y >= RADIUS) {\n      return 180 - angle;\n    }\n    if (x > RADIUS && y <= RADIUS) {\n      return 180 + angle;\n    }\n    return 180 + (180 - angle);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxCircularPlayerComponent } from './ngx-circular-player.component';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [NgxCircularPlayerComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxCircularPlayerComponent]\n})\nexport class NgxCircularPlayerModule { }\n","/*\n * Public API Surface of ngx-circular-player\n */\n\nexport * from './lib/ngx-circular-player.component';\nexport * from './lib/ngx-circular-player.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}