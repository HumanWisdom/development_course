{"version":3,"file":"ngx-circular-player.js","sources":["ng://ngx-circular-player/lib/ngx-circular-player.component.ts","ng://ngx-circular-player/lib/ngx-circular-player.module.ts","ng://ngx-circular-player/public-api.ts","ng://ngx-circular-player/ngx-circular-player.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nconst RADIUS = 50;\n\n@Component({\n  // tslint:disable component-selector\n  selector: 'ngx-circular-player',\n  templateUrl: './ngx-circular-player.component.html',\n  styleUrls: ['./ngx-circular-player.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxCircularPlayerComponent implements AfterViewInit {\n  @Input() radius = 120;\n  @Input() stroke = 20;\n  @Input() innerStroke = 2;\n  @Input() source: string;\n  @Input() strokeColor = '#fff';\n  @Input() progressStrokeColor = '#858585';\n  @Input() innerStrokeColor = '#eee';\n\n  @ViewChild('audio') audio: ElementRef;\n  @ViewChild('progress') progress: ElementRef;\n\n  playing = false;\n\n  toggle() {\n    this.playing = !this.playing;\n    if (this.playing) {\n      this.audio.nativeElement.play();\n    } else {\n      this.audio.nativeElement.pause();\n    }\n  }\n\n  get arrowStyle() {\n    const topWidth = this.radius / 8;\n    const bottomWidth = this.radius / 8;\n    const leftWidth = this.radius / 5;\n    return {\n      'border-top-width': `${topWidth}px`,\n      'border-bottom-width': `${bottomWidth}px`,\n      'border-left-width': `${leftWidth}px`\n    };\n  }\n\n  ngAfterViewInit() {\n    const progress = this.progress.nativeElement;\n    // During SSR we don't need to do anything special here.\n    if (!progress || typeof progress.getTotalLength !== 'function') {\n      return;\n    }\n    const totalLength = progress.getTotalLength();\n    const audio = this.audio.nativeElement as HTMLAudioElement;\n    progress.setAttribute('stroke-dasharray', totalLength);\n    progress.setAttribute('stroke-dashoffset', totalLength);\n    audio.addEventListener('pause', () => (this.playing = false));\n    audio.addEventListener('play', () => (this.playing = true));\n    audio.addEventListener('timeupdate', () => {\n      const currentTime = audio.currentTime;\n      const maxduration = audio.duration;\n      const calc = totalLength - (currentTime / maxduration) * totalLength;\n\n      progress.setAttribute('stroke-dashoffset', calc);\n    });\n  }\n\n  seek(evnt: MouseEvent) {\n    const ratio = this._calculateAngle(evnt) / 360;\n    const audio = this.audio.nativeElement as HTMLAudioElement;\n    const seekTo = ratio * audio.duration;\n    audio.currentTime = seekTo;\n  }\n\n  get centerX() {\n    return 50;\n  }\n\n  get centerY() {\n    return 50;\n  }\n\n  get circleRadius() {\n    return 32;\n  }\n\n  get pauseLeftBarSize() {\n    return {\n      width: `${this.radius / 10}px`,\n      height: `${this.radius / 3.5}px`,\n      left: `calc(50% - ${this.radius / 12}px)`\n    };\n  }\n\n  get pauseRightBarSize() {\n    return {\n      width: `${this.radius / 10}px`,\n      height: `${this.radius / 3.5}px`,\n      left: `calc(50% + ${this.radius / 12}px)`\n    };\n  }\n\n  get playButtonRadius() {\n    return this.radius - this.radius / 3 + 'px';\n  }\n\n  private _calculateAngle(evnt: MouseEvent) {\n    const x = (RADIUS * 2) / (this.radius / evnt.offsetX);\n    const y = (RADIUS * 2) / (this.radius / evnt.offsetY);\n    const slope = (RADIUS - y) / (RADIUS - x);\n    const angle = 180 * (Math.abs(Math.atan(slope)) / Math.PI);\n\n    if (x <= RADIUS && y >= RADIUS) {\n      return angle;\n    }\n    if (x > RADIUS && y >= RADIUS) {\n      return 180 - angle;\n    }\n    if (x > RADIUS && y <= RADIUS) {\n      return 180 + angle;\n    }\n    return 180 + (180 - angle);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxCircularPlayerComponent } from './ngx-circular-player.component';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [NgxCircularPlayerComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxCircularPlayerComponent]\n})\nexport class NgxCircularPlayerModule { }\n","/*\n * Public API Surface of ngx-circular-player\n */\n\nexport * from './lib/ngx-circular-player.component';\nexport * from './lib/ngx-circular-player.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}